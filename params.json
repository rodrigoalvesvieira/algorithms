{"name":"Algorithms & Data Structures","tagline":"Implementations of data structures & algorithms in Java for the Algorithms and Data Structures (IF672) discipline at CIn/UFPE","body":"## Algorithms & Data Structures by Rodrigo Alves\r\n\r\nImplementations of data structures, sorting and search algorithms in vanilla Java for the\r\nAlgorithms and Data Structures (IF672) discipline at CIn/UFPE\r\n\r\n| Data Structure                                                | Status           |\r\n| ------------------------------------------------------------- |:----------------:|\r\n| Singly Linked List                                            | Implemented      |\r\n| Doubly Linked List                                            | Implemented      |\r\n| Dynamic Array                                                 | Implemented      |\r\n| Queue                                                         | Implemented      |\r\n| Stack                                                         | Implemented      |\r\n| Min Heap (binary)                                             | Implemented      |\r\n| Max Heap (binary)                                             | Implemented      |\r\n| Binary Search Tree                                            | Implemented      |\r\n| Adelson-Velskii and Landis' (AVL) Tree                        | Implemented      |\r\n| Disjoint Set (union-find)                                     | Implemented      |\r\n| Hash Table                                                    | Implemented      |\r\n| Bloom Filter                                                  | Pending          |\r\n\r\n## Sorting\r\n\r\n| Algorithm            | Stability          | Status           | Remarks                                |\r\n| -------------------- |:------------------ | ----------------:| :-------------------------------------:|\r\n| Insertion sort       | Stable             | Implemented      | Use for small N or partially ordered   |\r\n| Bubble sort          | Stable             | Implemented      |                                        |\r\n| Selection sort       | Not stable         | Implemented      | N exchanges                            |\r\n| Shellsort            | Not stable         | Implemented      |                                        |\r\n| Quicksort            | Not stable         | Implemented      | Fastest in practice. Mostly N log N    |\r\n| Mergesort            | Stable             | Implemented      | N log N guarantee                      |\r\n| Rodrigosort          |                    | Implemented      |                                        |\r\n\r\n## Searching\r\n\r\n| Algorithm                            | Status           |\r\n| ------------------------------------ |:----------------:|\r\n| Binary Search                        | Implemented      |\r\n\r\n## Graph\r\n\r\n| Algorithm                           | Status           |\r\n| ----------------------------------- |:----------------:|\r\n| Breadth-First Search                | Implemented      |\r\n| Depth-First Search                  | Pending          |\r\n| Dijkstra's algorithm                | Pending          |\r\n| Kruskal MSP                         | Pending          |\r\n| Prim MSP                            | Pending          |\r\n\r\n## Other Important Algorithms\r\n\r\n\r\n| Algorithm                                     | Status           |\r\n| ----------------------------------------------|:----------------:|\r\n| Infix Expressions Evaluator                   | Pending          |\r\n| Convex Hull (Graham scan)                     | Pending          |\r\n| Strassen algorithm for Matrix multiplication  | Pending          |\r\n\r\n## Compiling\r\n\r\nFor compiling directly via command-line (No Eclipse or other IDE), do:\r\n\r\n```\r\n$ cd src/shared`\r\n\r\n$ javac -sourcepath .. Rodrigosort.java`\r\n\r\n$ java -cp .. Rodrigosort.Program\r\n```\r\n\r\n## Algorithms\r\n\r\n* Algorithms Implementations at Princeton University http://algs4.cs.princeton.edu/code/\r\n* Algorithms at Princeton University http://algs4.cs.princeton.edu/home/\r\n* IME/USP Análise de Algoritmos http://www.ime.usp.br/~pf/analise_de_algoritmos/index.html\r\n* Algoritmos para Grafos http://www.ime.usp.br/~pf/algoritmos_para_grafos/index.html\r\n* Algorithms Course Materials http://compgeom.cs.uiuc.edu/~jeffe/teaching/algorithms/\r\n* Big-O cheat sheet http://bigocheatsheet.com/\r\n* Computer Science animated http://www.csanimated.com\r\n* AlgoList http://www.algolist.net/\r\n* GeeksForGeeks http://www.geeksforgeeks.org/\r\n\r\n## Visualizations\r\n\r\n* Data Structure Visualizations http://www.cs.usfca.edu/~galles/visualization/Algorithms.html\r\n* Visualizations by Steven Halim http://www.comp.nus.edu.sg/~stevenha/visualization/\r\n* Sorting Algorithms http://www.sorting-algorithms.com/\r\n\r\n## Books\r\n\r\n* Introduction to Algorithms, 3rd edition. CORMEN, Thomas H. MIT Press and McGraw-Hill\r\n* Competitive Programming 3. HALIM, Steven. lulu\r\n\r\n## Copyright\r\n\r\n© 2013-2014 Rodrigo Alves","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}